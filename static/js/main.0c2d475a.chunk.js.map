{"version":3,"sources":["utils/helpers.js","components/Result.js","components/Chart.js","components/form-components/Input.js","components/form-components/Dropdown.js","components/form-components/Button.js","components/Form.js","app/App.js","serviceWorker.js","index.js"],"names":["numberWithCommas","x","parts","toString","split","replace","Result","props","fromCurrency","toCurrency","amount","result","id","Chart","amounts","className","map","i","oddEven","rate","toFixed","Input","onKeyPress","event","validateInput","onKeyUp","handleInputAmount","flagImages","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","Dropdown","listType","toLowerCase","src","currentSelection","currencies","onChange","handleSelectCurrency","selected","disabled","currency","currencyCode","otherSelection","Button","onClick","switchCurrencies","icon","faArrowsAltV","faArrowsAltH","Form","App","state","loaded","rootUrl","fromRate","toRate","bind","setCurrency","setFromRate","setToRate","fetchRate","setAmount","getResult","fetch","this","then","response","json","data","currenciesArr","prop","push","setState","target","value","Promise","resolve","reject","toUpperCase","currencyOne","currencyTwo","res","rates","originalFrom","originalTo","typed","charCode","console","log","preventDefault","indexOf","Fragment","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c2d475a.chunk.js","sourcesContent":["//Taken from: https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript?rq=1\r\nexport function numberWithCommas(x) {\r\n  const parts = x.toString().split(\".\");\r\n  return (\r\n    parts[0].replace(/\\B(?=(\\d{3})+(?=$))/g, \",\") +\r\n    (parts[1] ? \".\" + parts[1] : \"\")\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { numberWithCommas } from \"../utils/helpers\";\r\n\r\nconst Result = function(props) {\r\n  const { fromCurrency, toCurrency, amount, result } = props;\r\n  return (\r\n    <div id=\"result-div\">\r\n      <p id=\"result-from-p\">{`${numberWithCommas(props.amount)} ${\r\n        props.fromCurrency\r\n      } =`}</p>\r\n      <h3 id=\"result-to-p\">{`${numberWithCommas(props.result)} ${\r\n        props.toCurrency\r\n      }`}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport { numberWithCommas } from \"../utils/helpers\";\r\n\r\nconst Chart = function(props) {\r\n  const amounts = [1, 5, 10, 25, 50, 100, 500, 1000, 5000, 10000];\r\n  return (\r\n    <div className=\"chart\">\r\n      <div className=\"column-chart\">\r\n        <h3 className=\"chart-header\">{`Convert ${props.fromCurrency} to ${props.toCurrency}`}</h3>\r\n        <h4 className=\"currency-header\">{props.fromCurrency}</h4>\r\n        {amounts.map((amount, i) => {\r\n          const oddEven = (i + 1) % 2 === 0 ? \"line-even\" : \"line-odd\";\r\n          return <p className={oddEven}>{`${amount} ${props.fromCurrency}`}</p>;\r\n        })}\r\n      </div>\r\n      <div className=\"column-chart\">\r\n        <h3 className=\"chart-header\"> &nbsp; </h3>\r\n        <h4 className=\"currency-header\">{props.toCurrency}</h4>\r\n        {amounts.map((amount, i) => {\r\n          const oddEven = (i + 1) % 2 === 0 ? \"line-even\" : \"line-odd\";\r\n          return (\r\n            <p className={oddEven}>{`${numberWithCommas(\r\n              (props.rate * amount).toFixed(3)\r\n            )} ${props.toCurrency}`}</p>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nconst Input = function(props) {\r\n    return (\r\n      <div className=\"form-div\">\r\n        <p className=\"form-label\">Amount</p>\r\n        <input onKeyPress = {(event) => props.validateInput(event)} className=\"form-element\" onKeyUp={(event) => props.handleInputAmount(event)}></input>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst Dropdown = function(props) {\r\n  /*\r\n    Selected attribute on <option>:\r\n    - used for the switch button\r\n    - if switch is hit, it will check the two selected options held in state; then find the matching option and set it as selected\r\n    - Had to do this otherwise the dropdown wouldn't change the display even though the value would change\r\n    Class:\r\n    - if the other dropdown has selected an option, that option needs to be removed from the other dropdown\r\n    - Ex. From: AUD, then To: AUD should be eliminated and vice-versa (prevent same currency conversion)\r\n    */\r\n\r\n  return (\r\n    <div className=\"form-div\">\r\n      <p className=\"form-label from-to\">\r\n        {props.listType}\r\n        <img\r\n          id={`img-${props.listType.toLowerCase()}`}\r\n          src={flagImages[props.currentSelection]}\r\n        />\r\n      </p>\r\n      <select\r\n        className=\"form-element\"\r\n        currencies={props.currencies}\r\n        onChange={event => props.handleSelectCurrency(event, props.listType)}\r\n      >\r\n        <option selected disabled>\r\n          {props.listType}\r\n        </option>\r\n        {props.currencies.map(currency => {\r\n          const currencyCode = currency[0] + currency[1] + currency[2];\r\n          const className =\r\n            currencyCode === props.otherSelection ? \"hidden\" : \"\";\r\n          if (currencyCode === props.currentSelection) {\r\n            return (\r\n              <option selected className={className}>\r\n                {currency}\r\n              </option>\r\n            );\r\n          } else {\r\n            return <option className={className}>{currency}</option>;\r\n          }\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst flagImages = {\r\n  AUD: \"https://lipis.github.io/flag-icon-css/flags/4x3/au.svg\",\r\n  BGN: \"https://lipis.github.io/flag-icon-css/flags/4x3/bg.svg\",\r\n  BRL: \"https://lipis.github.io/flag-icon-css/flags/4x3/br.svg\",\r\n  CAD: \"https://lipis.github.io/flag-icon-css/flags/4x3/ca.svg\",\r\n  CHF: \"https://lipis.github.io/flag-icon-css/flags/4x3/ch.svg\",\r\n  CNY: \"https://lipis.github.io/flag-icon-css/flags/4x3/cn.svg\",\r\n  CZK: \"https://lipis.github.io/flag-icon-css/flags/4x3/cz.svg\",\r\n  DKK: \"https://lipis.github.io/flag-icon-css/flags/4x3/dk.svg\",\r\n  EUR: \"https://lipis.github.io/flag-icon-css/flags/4x3/eu.svg\",\r\n  GBP: \"https://lipis.github.io/flag-icon-css/flags/4x3/gb.svg\",\r\n  HKD: \"https://lipis.github.io/flag-icon-css/flags/4x3/hk.svg\",\r\n  HRK: \"https://lipis.github.io/flag-icon-css/flags/4x3/hr.svg\",\r\n  HUF: \"https://lipis.github.io/flag-icon-css/flags/4x3/hu.svg\",\r\n  IDR: \"https://lipis.github.io/flag-icon-css/flags/4x3/id.svg\",\r\n  ILS: \"https://lipis.github.io/flag-icon-css/flags/4x3/il.svg\",\r\n  INR: \"https://lipis.github.io/flag-icon-css/flags/4x3/in.svg\",\r\n  ISK: \"https://lipis.github.io/flag-icon-css/flags/4x3/is.svg\",\r\n  JPY: \"https://lipis.github.io/flag-icon-css/flags/4x3/jp.svg\",\r\n  KRW: \"https://lipis.github.io/flag-icon-css/flags/4x3/kr.svg\",\r\n  MXN: \"https://lipis.github.io/flag-icon-css/flags/4x3/mx.svg\",\r\n  MYR: \"https://lipis.github.io/flag-icon-css/flags/4x3/my.svg\",\r\n  NOK: \"https://lipis.github.io/flag-icon-css/flags/4x3/no.svg\",\r\n  NZD: \"https://lipis.github.io/flag-icon-css/flags/4x3/nz.svg\",\r\n  PHP: \"https://lipis.github.io/flag-icon-css/flags/4x3/ph.svg\",\r\n  PLN: \"https://lipis.github.io/flag-icon-css/flags/4x3/pl.svg\",\r\n  RON: \"https://lipis.github.io/flag-icon-css/flags/4x3/ro.svg\",\r\n  RUB: \"https://lipis.github.io/flag-icon-css/flags/4x3/ru.svg\",\r\n  SEK: \"https://lipis.github.io/flag-icon-css/flags/4x3/se.svg\",\r\n  SGD: \"https://lipis.github.io/flag-icon-css/flags/4x3/sg.svg\",\r\n  THB: \"https://lipis.github.io/flag-icon-css/flags/4x3/th.svg\",\r\n  TRY: \"https://lipis.github.io/flag-icon-css/flags/4x3/tr.svg\",\r\n  USD: \"https://lipis.github.io/flag-icon-css/flags/4x3/um.svg\",\r\n  ZAR: \"https://lipis.github.io/flag-icon-css/flags/4x3/za.svg\"\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowsAltH, faArrowsAltV } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Button = function (props) {\r\n  return (\r\n    <div id=\"button-div\">\r\n      <p className=\"form-label\"> &nbsp; </p>\r\n      <button\r\n        onClick={props.switchCurrencies}\r\n        id=\"btn-switch\"\r\n        className=\"form-element\"\r\n      >\r\n        <FontAwesomeIcon icon={faArrowsAltV} id=\"arrow-vertical\" />\r\n        <FontAwesomeIcon icon={faArrowsAltH} id=\"arrow-horizontal\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Input from \"./form-components/Input\";\r\nimport Dropdown from \"./form-components/Dropdown\";\r\nimport Button from \"./form-components/Button\";\r\n\r\nconst Form = function(props) {\r\n  return (\r\n    <div id=\"forms-wrapper\">\r\n      <Input\r\n        validateInput={props.validateInput}\r\n        handleInputAmount={props.handleInputAmount}\r\n      />\r\n      <Dropdown\r\n        listType={\"From\"}\r\n        currencies={props.currencies}\r\n        currentSelection={props.fromCurrency}\r\n        otherSelection={props.toCurrency}\r\n        handleSelectCurrency={props.handleSelectCurrency}\r\n      />\r\n      <Button switchCurrencies={props.switchCurrencies}></Button>\r\n      <Dropdown\r\n        listType={\"To\"}\r\n        currencies={props.currencies}\r\n        currentSelection={props.toCurrency}\r\n        otherSelection={props.fromCurrency}\r\n        handleSelectCurrency={props.handleSelectCurrency}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport \"../scss/css/main.min.css\";\n\nimport Result from \"../components/Result\";\nimport Chart from \"../components/Chart\";\nimport Form from \"../components/Form\";\n\nimport { numberWithCommas } from \"../utils/helpers\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      currencies: [],\n      rootUrl: \"https://api.frankfurter.app\",\n      fromCurrency: \"USD\",\n      toCurrency: \"JPY\",\n      fromRate: null, //gets set onMount using fromCurrency\n      toRate: null, //gets set onMount using toCurrency\n      amount: 1, //by default convert 1\n      result: 1 //used 1 bc null created an error for Result component\n    };\n\n    this.handleSelectCurrency = this.handleSelectCurrency.bind(this);\n    this.setCurrency = this.setCurrency.bind(this);\n    this.setFromRate = this.setFromRate.bind(this);\n    this.setToRate = this.setToRate.bind(this);\n    this.fetchRate = this.fetchRate.bind(this);\n\n    this.handleInputAmount = this.handleInputAmount.bind(this);\n    this.setAmount = this.setAmount.bind(this);\n\n    this.getResult = this.getResult.bind(this);\n\n    this.switchCurrencies = this.switchCurrencies.bind(this);\n\n    this.validateInput = this.validateInput.bind(this);\n  }\n\n  //Render From and To dropdowns\n  componentDidMount() {\n    fetch(`${this.state.rootUrl}/currencies`)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        // console.log(data)\n        const currenciesArr = [];\n        for (let prop in data) {\n          currenciesArr.push(`${prop}: ${data[prop]}`);\n        }\n\n        this.setState({\n          currencies: [...currenciesArr],\n          loaded: true\n        });\n      })\n      .then(() => {\n        this.setFromRate();\n        this.setToRate();\n        this.getResult();\n      });\n  }\n\n  handleSelectCurrency(event, listType) {\n    const currency = event.target.value;\n    new Promise((resolve, reject) => {\n      this.setCurrency(currency, listType);\n      resolve();\n    }).then(() => {\n      this.setFromRate();\n      this.setToRate();\n      this.getResult(); // updates result when changing currencies\n    });\n  }\n\n  setCurrency(currency, listType) {\n    const currencyCode = currency[0] + currency[1] + currency[2];\n    if (listType.toUpperCase() === \"FROM\") {\n      this.setState({ fromCurrency: currencyCode });\n    } else {\n      this.setState({ toCurrency: currencyCode });\n    }\n  }\n\n  setFromRate() {\n    this.fetchRate(this.state.fromCurrency, this.state.toCurrency).then(rate =>\n      this.setState({ fromRate: rate })\n    );\n  }\n  setToRate() {\n    this.fetchRate(this.state.toCurrency, this.state.fromCurrency).then(rate =>\n      this.setState({ toRate: rate })\n    );\n  }\n  fetchRate(currencyOne, currencyTwo) {\n    return fetch(`${this.state.rootUrl}/latest?from=${currencyOne}`)\n      .then(res => res.json())\n      .then(data => data.rates[currencyTwo]);\n  }\n\n  //Runs as user types into input\n  handleInputAmount(event) {\n    const amount = event.target.value;\n    if (amount == 0) {\n      return;\n    }\n    new Promise((resolve, reject) => {\n      this.setAmount(amount);\n      resolve();\n    }).then(() => {\n      //render the result as user types\n      this.getResult();\n    });\n  }\n\n  setAmount(amount) {\n    this.setState({ amount: amount });\n  }\n\n  getResult() {\n    fetch(\n      `${this.state.rootUrl}/latest?amount=${this.state.amount}&from=${this.state.fromCurrency}&to=${this.state.toCurrency}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        let result = data.rates[this.state.toCurrency].toFixed(3); //round to 3 decimals\n        this.setState({ result: result });\n      });\n  }\n\n  switchCurrencies() {\n    const originalFrom = this.state.fromCurrency;\n    const originalTo = this.state.toCurrency;\n\n    new Promise((resolve, reject) => {\n      this.setState({\n        fromCurrency: originalTo,\n        toCurrency: originalFrom\n      });\n      resolve();\n    }).then(() => {\n      this.setFromRate();\n      this.setToRate();\n      this.getResult();\n    });\n  }\n\n  validateInput(event) {\n    let typed = event.charCode;\n    const decimalCode = 46;\n    const zeroCode = 48;\n    //If not a number, prevent; Nums char code range: 48-57\n    if (typed != decimalCode && (typed < 48 || typed > 57)) {\n      console.log(\"not valid\");\n      event.preventDefault();\n    }\n    //Only allow one decimal point; if amount already has decimal then prevent\n    if (typed == decimalCode) {\n      if (\n        this.state.amount\n          .toString()\n          .split(\"\")\n          .indexOf(\".\") > -1\n      ) {\n        event.preventDefault();\n      }\n    }\n    //Can't start with a 0 i.e. if input is blank, prevent 0 from being typed\n    if (typed === zeroCode) {\n      if (!event.target.value) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return (\n        <div id=\"loading-div\">\n          <p>\n            Now loading currency data from the{\" \"}\n            <a href=\"https://api.frankfurter.app/\">Frankfurter API</a>.\n          </p>\n          <p>\n            If this app does not load, then the API is currently unavailable.\n            Please try again later.\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <h2 id=\"header\">Currency Converter</h2>\n          <div id=\"top-wrapper\">\n            <Form\n              validateInput={this.validateInput}\n              handleInputAmount={this.handleInputAmount}\n              currencies={this.state.currencies}\n              fromCurrency={this.state.fromCurrency}\n              toCurrency={this.state.toCurrency}\n              handleSelectCurrency={this.handleSelectCurrency}\n              switchCurrencies={this.switchCurrencies}\n            />\n            <Result\n              fromCurrency={this.state.fromCurrency}\n              toCurrency={this.state.toCurrency}\n              amount={this.state.amount}\n              result={this.state.result}\n            />\n          </div>\n          {/*Only render the chart if two currencies have been selected */\n          this.state.fromCurrency && this.state.toCurrency ? (\n            <div id=\"charts-wrapper\">\n              <Chart\n                rate={this.state.fromRate}\n                fromCurrency={this.state.fromCurrency}\n                toCurrency={this.state.toCurrency}\n              />\n              <Chart\n                rate={this.state.toRate}\n                fromCurrency={this.state.toCurrency}\n                toCurrency={this.state.fromCurrency}\n              />\n              <p id=\"anchor\">\n                Currency rates provided by{\" \"}\n                <a href=\"https://www.frankfurter.app/\">Frankfurter API</a>\n              </p>\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}